language: generic
sudo: required
os: linux
before_cache:
- rm -fr $HOME/.gradle/caches/5.2.1
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  npm: true
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/.android/build-cache
# android:
#   components:
#   - tools
#   - platform-tools
#   - build-tools-28.0.3
#   - android-28
#   - android-$API
#   - sys-img-$ABI-android-$API
#   licenses:
#   - 'android-sdk-preview-license-d099d938'
#   - 'android-sdk-license-.+'
#   - 'google-gdk-license-.+'
env:
  global:
  - ADB_INSTALL_TIMEOUT=8
  matrix:
  # - API=29 ABI="google_apis;x86_64"      #
  # - API=29 ABI="google_apis;x86"         #

  - API=28 ABI="google_apis;x86"         #

  # - API=27 ABI="default;x86_64"          #
  # - API=27 ABI="google_apis;x86"         #

  # - API=26 ABI="google_apis;x86_64"      #
  # - API=26 ABI="google_apis;x86"         #

  # - API=25 ABI="google_apis;x86_64"      #
  # - API=25 ABI="google_apis;x86"         #
  # - API=25 ABI="google_apis;armeabi-v7a" #
  # - API=25 ABI="google_apis;arm64-v8a"   #

  # - API=24 ABI="google_apis;x86_64"      #
  # - API=24 ABI="google_apis;x86"         #
  # - API=24 ABI="google_apis;armeabi-v7a" #
  # - API=24 ABI="google_apis;arm64-v8a"   #

  # - API=23 ABI="google_apis;x86_64"      #
  # - API=23 ABI="google_apis;x86"         #
  # - API=23 ABI="google_apis;armeabi-v7a" #

  # - API=22 ABI="google_apis;x86_64"      #
  # - API=22 ABI="google_apis;x86"         #
  # - API=22 ABI="google_apis;armeabi-v7a" #

  # - API=21 ABI="google_apis;x86_64"      #
  # - API=21 ABI="google_apis;x86"         #
  # - API=21 ABI="google_apis;armeabi-v7a" #

  # - API=19 ABI="google_apis;x86"         #
  - API=19 ABI="google_apis;armeabi-v7a" #
  # - API=19 ABI="google_apis;armeabi"     #

  # - API=18 ABI="google_apis;x86"         #
  # - API=18 ABI="google_apis;armeabi"     #
  # - API=18 ABI="google_apis;armeabi-v7a" #

  # - API=17 ABI="google_apis;x86"         #
  # - API=17 ABI="google_apis;armeabi"     #
  # - API=17 ABI="google_apis;armeabi-v7a" #

  # - API=16 ABI="google_apis;x86"         #
  - API=16 ABI="google_apis;armeabi-v7a" #
  # - API=16 ABI="google_apis;armeabi"     #

branches:
  only:
    - master
before_install:
- |
  if [ $TRAVIS_OS_NAME == "linux" ]; then
    export DISPLAY=:99.0
    sh -e /etc/init.d/xvfb start
    sleep 3 # give xvfb some time to start
  fi

- ANDROID_TOOLS=4333796 # android-28
- export ANDROID_HOME=~/android-sdk
- wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
- unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
- rm android-sdk-tools.zip
- PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
- export ANDROID_SDK_ROOT=$ANDROID_HOME
# Silence warning.
- mkdir -p ~/.android
- touch ~/.android/repositories.cfg
- yes | sdkmanager --licenses                                        # accept all licenses
- sdkmanager "tools" "platform-tools" > /dev/null                    # tools + platform-tools
- sdkmanager --list | head -15                                       # packages list
- sdkmanager "build-tools;28.0.3" "platforms;android-28" > /dev/null # build-tools + compile API version
- sdkmanager --list | head -15                                       # packages list
- nvm install 11                                                     # for Glide download

install:
- sdkmanager "emulator" > /dev/null                                  # emulator
- sdkmanager "platforms;android-$API" > /dev/null                    # android platform
- sdkmanager "system-images;android-$API;$ABI" > /dev/null           # emulator android system image
- node ./travis_scripts/get-glide.js                                 # Glide

before_script:
- echo no | avdmanager create avd -n test -k "system-images;android-$API;$ABI"
- |
  if [[ "${API}${ABI}" == "25google_apis;armeabi-v7a" || "${API}${ABI}" == "24google_apis;armeabi-v7a" ]]; then
    EMU_PARAMS="-no-window -gpu swiftshader"
  else
    EMU_PARAMS="-no-boot-anim -gpu off"
  fi
  echo $EMU_PARAMS
  $ANDROID_HOME/emulator/emulator -avd test -no-accel -no-audio $EMU_PARAMS $EMU_ADDITIONAL_OPTIONS ${EMU_DEBUG} &

- chmod +x ./travis_scripts/android-wait-for-emulator.sh
- ./travis_scripts/android-wait-for-emulator.sh
- adb shell input keyevent 82 &
- chmod +x ./gradlew
script: ./gradlew connectedCheck

jobs:
  include:
  - stage: deploy
    env: API=28 ABI="google_apis;x86_64"
    script: ./gradlew build connectedCheck
    before_deploy:
    - node ./travis_scripts/deploy.js
    - chmod +x ./travis_scripts/appetize_url.sh
    - source ./travis_scripts/appetize_url.sh
    - echo $APPETIZE_URL
    - chmod +x ./travis_scripts/appetize_url1.sh
    - source ./travis_scripts/appetize_url1.sh
    - echo $APPETIZE_URL
    deploy:
      provider: releases
      api_key: $GITHUB_TOKEN
      file_glob: true
      file: "./app/build/outputs/apk/*/*.apk"
      skip_cleanup: true
      name: $TRAVIS_COMMIT_MESSAGE
      on:
        branch: master
    # - &test
    #   stage: testJDK
    #   jdk:
    #   - openjdk8
    # - <<: *test
# matrix:
#   include:
#     - jdk: openjdk8
#     - jdk: openjdk12
#       before_deploy:
#       - export TRAVIS_TAG=latest
#       - node ./travis_scripts/deploy.js
#       - chmod +x ./travis_scripts/appetize_url.sh
#       - ./travis_scripts/appetize_url.sh
#       - echo $APPETIZE_URL
#       deploy:
#         provider: releases
#         api_key: $GITHUB_TOKEN
#         file_glob: true
#         file: "./app/build/outputs/apk/*/*.apk"
#         skip_cleanup: true
#         name: $(date +'%Y.%m.%d.%H:%M.%S')
#         on:
#           branch: master

  # on:
    # condition: $TRAVIS_COMMIT_MESSAGE =~ ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$


